{"remainingRequest":"/var/www/html/front/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/html/front/src/components/UI/input/InputDataOwner.vue?vue&type=script&lang=js&","dependencies":[{"path":"/var/www/html/front/src/components/UI/input/InputDataOwner.vue","mtime":1637311064022},{"path":"/var/www/html/front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/front/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/var/www/html/front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBUcmFuc2xpdGVyYXRpb24gZnJvbSAiLi4vLi4vLi4vbWl4aW5zL1RyYW5zbGl0ZXJhdGlvbiI7CgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIklucHV0RGF0YU93bmVyIiwKICBwcm9wczogewogICAgTW9kZWw6IHsKICAgICAgdHlwZTpPYmplY3QsCiAgICB9LAogICAgc2F2ZWREZXBvbjogewogICAgICB0eXBlOkJvb2xlYW4KICAgIH0KICB9LAogIG1peGluczpbVHJhbnNsaXRlcmF0aW9uXSwKICBtb3VudGVkKCkgewogICAgdGhpcy4kbmV4dFRpY2soKCk9PnsKICAgICAgaWYgKHRoaXMuc2F2ZWREZXBvbiAhPT0gdHJ1ZSkgewogICAgICAgIHRoaXMuJHJlZnMuaW5wdXQuZm9jdXMoKQogICAgICB9CiAgICB9KTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGhhbmRsZUJsdXIoZSkgewogICAgICBpZiAoZS50YXJnZXQudmFsdWUubGVuZ3RoIDwgMykgewogICAgICAgIHRoaXMucmVtb3ZlTW9kZWwoKQogICAgICB9CiAgICB9LAogICAgcmVtb3ZlTW9kZWwoKSB7CiAgICAgIHRoaXMuJGVtaXQoJ3JlbW92ZScsIHRoaXMuTW9kZWwpCiAgICB9LAogICAgZ2V0VHJhbnNsaXRlcmF0aW9uKGUpIHsKICAgICAgdGhpcy5Nb2RlbC5uYW1lX2VuID0gdGhpcy50cmFuc2xpdGVyYXRpb24oZS50YXJnZXQudmFsdWUpCiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["InputDataOwner.vue"],"names":[],"mappings":";;;;;;;;;;;;;;AAcA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"InputDataOwner.vue","sourceRoot":"src/components/UI/input","sourcesContent":["<template>\n  <div class=\"input-title item\">\n    <span\n        class=\"js-remove-item\"\n        @click=\"removeModel\"\n    >\n      +\n    </span>\n\n    <input type=\"text\" ref=\"input\" @input=\"getTransliteration\" v-on:blur=\"handleBlur\" v-model.trim=\"Model.name\">\n  </div>\n</template>\n\n<script>\nimport Transliteration from \"../../../mixins/Transliteration\";\n\nexport default {\n  name: \"InputDataOwner\",\n  props: {\n    Model: {\n      type:Object,\n    },\n    savedDepon: {\n      type:Boolean\n    }\n  },\n  mixins:[Transliteration],\n  mounted() {\n    this.$nextTick(()=>{\n      if (this.savedDepon !== true) {\n        this.$refs.input.focus()\n      }\n    });\n  },\n  methods: {\n    handleBlur(e) {\n      if (e.target.value.length < 3) {\n        this.removeModel()\n      }\n    },\n    removeModel() {\n      this.$emit('remove', this.Model)\n    },\n    getTransliteration(e) {\n      this.Model.name_en = this.transliteration(e.target.value)\n    }\n  }\n}\n</script>\n\n<style scoped lang=\"scss\">\n.input-title {\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n}\n\ninput {\n  width: 100%;\n  margin-left: 2px;\n  font-size: 16px;\n  line-height: 21px;\n  color: var(--text_gray_color);\n  font-family: var(--ff_regular);\n  background-color: transparent;\n  &::placeholder {\n    color: var(--text_gray_color);\n  }\n}\n</style>\n"]}]}