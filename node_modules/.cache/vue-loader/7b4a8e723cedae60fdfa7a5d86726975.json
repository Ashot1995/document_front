{"remainingRequest":"/var/www/html/front/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/html/front/src/components/signForms/SignInForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"/var/www/html/front/src/components/signForms/SignInForm.vue","mtime":1637350359327},{"path":"/var/www/html/front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/front/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/var/www/html/front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQge2VtYWlsLCByZXF1aXJlZCwgbWluTGVuZ3RofSBmcm9tICd2dWVsaWRhdGUvbGliL3ZhbGlkYXRvcnMnDQppbXBvcnQge21hcEFjdGlvbnN9IGZyb20gInZ1ZXgiOw0KaW1wb3J0IHJvdXRlciBmcm9tICIuLi8uLi9yb3V0ZXIiOw0KDQpleHBvcnQgZGVmYXVsdCB7DQogIG5hbWU6ICJTaWduSW5Gb3JtIiwNCiAgZGF0YSgpIHsNCiAgICByZXR1cm4gew0KICAgICAgZW1haWw6ICcnLA0KICAgICAgcGFzc3dvcmQ6ICcnLA0KICAgICAgYXV0aEVycm9yOiBmYWxzZSwNCiAgICAgIHJlY2FwdGNoYTogZmFsc2UNCiAgICB9DQogIH0sDQogIHZhbGlkYXRpb25zOiB7DQogICAgZW1haWw6e2VtYWlsLCByZXF1aXJlZH0sDQogICAgcGFzc3dvcmQ6e3JlcXVpcmVkLCBtaW5MZW5ndGg6IG1pbkxlbmd0aCg2KX0sDQogIH0sDQogIHByb3BzOlsnc2l0ZWtleSddLA0KICBtZXRob2RzOiB7DQogICAgLi4ubWFwQWN0aW9ucyhbJ2xvZ2luVXNlckFjdGlvbiddKSwNCiAgICBzdWJtaXRMb2dpbihldmVudCkgew0KICAgICAgbGV0IGNhcHRjaGEgPSBldmVudC50YXJnZXRbJ2ctcmVjYXB0Y2hhLXJlc3BvbnNlJ10udmFsdWU7DQogICAgICBpZiAodGhpcy4kdi4kaW52YWxpZCB8fCAhY2FwdGNoYSkgew0KICAgICAgICB0aGlzLnJlY2FwdGNoYSA9IHRydWUNCiAgICAgICAgdGhpcy4kdi4kdG91Y2goKQ0KICAgICAgfSBlbHNlIHsNCiAgICAgICAgbGV0IGxvZ2luID0gew0KICAgICAgICAgIGVtYWlsOiB0aGlzLmVtYWlsLA0KICAgICAgICAgIHBhc3N3b3JkOiB0aGlzLnBhc3N3b3JkLA0KICAgICAgICAgIGNhcHRjaGE6IHRoaXMuY2FwdGNoYQ0KICAgICAgICB9DQogICAgICAgIHRoaXMucmVjYXB0Y2hhID0gZmFsc2UNCiAgICAgICAgdGhpcy5sb2dpblVzZXJBY3Rpb24obG9naW4pLnRoZW4oKHJlcykgPT4gew0KICAgICAgICAgIGlmIChyZXMgPT09IDIwMCkgew0KICAgICAgICAgICAgdGhpcy4kc3RvcmUuc3RhdGUuaXNBdXRoID0gZmFsc2U7DQogICAgICAgICAgICByb3V0ZXIucHVzaCgnLycpDQogICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgIHRoaXMuYXV0aEVycm9yID0gdHJ1ZQ0KICAgICAgICAgIH0NCiAgICAgICAgfSkuY2F0Y2goKGVycm9yKSA9PiB7DQogICAgICAgICAgY29uc29sZS5sb2coZXJyb3IsICdlcnJvcicpDQogICAgICAgIH0pDQogICAgICB9DQogICAgfQ0KICB9DQp9DQo="},{"version":3,"sources":["SignInForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SignInForm.vue","sourceRoot":"src/components/signForms","sourcesContent":["<template>\r\n  <div class=\"auth__form sign_in\">\r\n    <form action=\"\" @submit.prevent=\"submitLogin\">\r\n      <div\r\n          class=\"error\"\r\n          v-if=\"authError\"\r\n      >\r\n        неправильный емейл или пароль\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"\">Email:</label>\r\n        <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            v-model.trim=\"email\"\r\n            :class=\"{invalid:($v.email.$dirty && !$v.email.required) || ($v.email.$dirty && !$v.email.email)}\"\r\n        >\r\n        <div\r\n            class=\"error\"\r\n            v-if=\"$v.email.$dirty && !$v.email.required\"\r\n        >\r\n          Поле email не должно быть пустым\r\n        </div>\r\n        <div\r\n            class=\"error\"\r\n            v-else-if=\"$v.email.$dirty && !$v.email.email\"\r\n        >\r\n          Введите корректный Email\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <label for=\"\">Пароль:</label>\r\n        <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            v-model.trim=\"password\"\r\n            :class=\"{invalid:($v.password.$dirty && !$v.password.required) || ($v.password.$dirty && !$v.password.minLength)}\"\r\n        >\r\n        <div\r\n            class=\"error\"\r\n            v-if=\"$v.password.$dirty && !$v.password.required\"\r\n        >\r\n          Введите пароль\r\n        </div>\r\n        <div\r\n            class=\"error\"\r\n            v-else-if=\"$v.password.$dirty && !$v.password.minLength\"\r\n        >\r\n          Пароль должен быть не менее {{ $v.password.$params.minLength.min }} символов\r\n        </div>\r\n      </div>\r\n\r\n      <div\r\n          id=\"g-recaptcha\"\r\n          class=\"g-recaptcha\"\r\n          :data-sitekey=\"sitekey\">\r\n      </div>\r\n      <div\r\n          class=\"error\"\r\n          v-if=\"recaptcha\"\r\n      >\r\n        Подтвердите что вы не робот\r\n      </div>\r\n\r\n      <button type=\"submit\" class=\"btn-orange submit-form\">Авторизоваться</button>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {email, required, minLength} from 'vuelidate/lib/validators'\r\nimport {mapActions} from \"vuex\";\r\nimport router from \"../../router\";\r\n\r\nexport default {\r\n  name: \"SignInForm\",\r\n  data() {\r\n    return {\r\n      email: '',\r\n      password: '',\r\n      authError: false,\r\n      recaptcha: false\r\n    }\r\n  },\r\n  validations: {\r\n    email:{email, required},\r\n    password:{required, minLength: minLength(6)},\r\n  },\r\n  props:['sitekey'],\r\n  methods: {\r\n    ...mapActions(['loginUserAction']),\r\n    submitLogin(event) {\r\n      let captcha = event.target['g-recaptcha-response'].value;\r\n      if (this.$v.$invalid || !captcha) {\r\n        this.recaptcha = true\r\n        this.$v.$touch()\r\n      } else {\r\n        let login = {\r\n          email: this.email,\r\n          password: this.password,\r\n          captcha: this.captcha\r\n        }\r\n        this.recaptcha = false\r\n        this.loginUserAction(login).then((res) => {\r\n          if (res === 200) {\r\n            this.$store.state.isAuth = false;\r\n            router.push('/')\r\n          } else {\r\n            this.authError = true\r\n          }\r\n        }).catch((error) => {\r\n          console.log(error, 'error')\r\n        })\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>"]}]}