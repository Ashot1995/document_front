{"remainingRequest":"/var/www/html/front/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/html/front/src/components/popups/SpecifyMailPopup.vue?vue&type=script&lang=js&","dependencies":[{"path":"/var/www/html/front/src/components/popups/SpecifyMailPopup.vue","mtime":1637097269375},{"path":"/var/www/html/front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/front/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/var/www/html/front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7bWFwQWN0aW9uc30gZnJvbSAndnVleCcKaW1wb3J0IHtlbWFpbCwgcmVxdWlyZWR9IGZyb20gJ3Z1ZWxpZGF0ZS9saWIvdmFsaWRhdG9ycycKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiU3BlY2lmeU1haWxQb3B1cCIsCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGVtYWlsOiAnJywKICAgIH0KICB9LAogIHZhbGlkYXRpb25zOiB7CiAgICBlbWFpbDp7ZW1haWwsIHJlcXVpcmVkfSwKICB9LAogIG1vdW50ZWQoKSB7CiAgICB0aGlzLiRuZXh0VGljaygoKT0+ewogICAgICB0aGlzLiRyZWZzLmlucHV0LmZvY3VzKCkKICAgIH0pOwogIH0sCiAgbWV0aG9kczogewogICAgLi4ubWFwQWN0aW9ucyh7CiAgICAgIHRvZ2dsZVR5cGVQb3B1cDogJ1BvcHVwTW9kdWxlL3RvZ2dsZVR5cGVQb3B1cCcKICAgIH0pLAogICAgc3VibWl0RW1haWwoKSB7CiAgICAgIGlmKHRoaXMuJHYuJGludmFsaWQpIHsKICAgICAgICB0aGlzLiR2LiR0b3VjaCgpCiAgICAgICAgcmV0dXJuCiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy50b2dnbGVUeXBlUG9wdXAoJ2FjY2VzcycpCiAgICAgIH0KICAgIH0KICB9Cn0K"},{"version":3,"sources":["SpecifyMailPopup.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SpecifyMailPopup.vue","sourceRoot":"src/components/popups","sourcesContent":["<template>\n  <div class=\"popup__body\">\n    <div class=\"title\">Укажите вашу Google-почту</div>\n    <form  @submit.prevent=\"submitEmail\">\n      <div class=\"form-group\">\n        <input\n            type=\"text\"\n            ref=\"input\"\n            v-model.trim=\"email\"\n            :class=\"{invalid:($v.email.$dirty && !$v.email.required) || ($v.email.$dirty && !$v.email.email)}\"\n        >\n        <div\n            class=\"error\"\n            v-if=\"$v.email.$dirty && !$v.email.required\"\n        >\n          Поле email не должно быть пустым\n        </div>\n        <div\n            class=\"error\"\n            v-else-if=\"$v.email.$dirty && !$v.email.email\"\n        >\n          Введите корректный Email\n        </div>\n      </div>\n      <div class=\"control-buttons\">\n        <button class=\"btn-orange\" type=\"submit\">\n          Продолжить\n        </button>\n      </div>\n    </form>\n  </div>\n</template>\n\n<script>\nimport {mapActions} from 'vuex'\nimport {email, required} from 'vuelidate/lib/validators'\n\nexport default {\n  name: \"SpecifyMailPopup\",\n  data() {\n    return {\n      email: '',\n    }\n  },\n  validations: {\n    email:{email, required},\n  },\n  mounted() {\n    this.$nextTick(()=>{\n      this.$refs.input.focus()\n    });\n  },\n  methods: {\n    ...mapActions({\n      toggleTypePopup: 'PopupModule/toggleTypePopup'\n    }),\n    submitEmail() {\n      if(this.$v.$invalid) {\n        this.$v.$touch()\n        return\n      } else {\n        this.toggleTypePopup('access')\n      }\n    }\n  }\n}\n</script>\n\n<style scoped lang=\"scss\">\n  .invalid {\n    border: 1px solid red;\n  }\n  input {\n    width: 350px !important;\n  }\n  .error {\n    margin-top: 5px;\n    color: red;\n    padding: 0 15px;\n    font-size: 12px;\n  }\n</style>\n"]}]}