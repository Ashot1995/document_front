{"remainingRequest":"/var/www/html/front/node_modules/babel-loader/lib/index.js!/var/www/html/front/src/store/modules/clientData/ClientStoragesModule.js","dependencies":[{"path":"/var/www/html/front/src/store/modules/clientData/ClientStoragesModule.js","mtime":1637349432418},{"path":"/var/www/html/front/babel.config.js","mtime":1636015662000},{"path":"/var/www/html/front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/front/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi92YXIvd3d3L2h0bWwvZnJvbnQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZpbHRlci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLmZvci1lYWNoLmpzIjsKaW1wb3J0IGF4aW9zIGZyb20gImF4aW9zIjsKZXhwb3J0IHZhciBDbGllbnRTdG9yYWdlc01vZHVsZSA9IHsKICBzdGF0ZTogZnVuY3Rpb24gc3RhdGUoKSB7CiAgICByZXR1cm4gewogICAgICBQb2ludHM6IFtdLAogICAgICBOZXdQb2ludFR5cGU6ICcnLAogICAgICBQb2ludFRvUmVtb3ZlOiB7fQogICAgfTsKICB9LAogIGdldHRlcnM6IHt9LAogIG11dGF0aW9uczogewogICAgc2V0TmV3UG9pbnRUeXBlOiBmdW5jdGlvbiBzZXROZXdQb2ludFR5cGUoc3RhdGUsIHR5cGUpIHsKICAgICAgc3RhdGUuTmV3UG9pbnRUeXBlID0gdHlwZTsKICAgIH0sCiAgICBzZXRQb2ludFRvUmVtb3ZlOiBmdW5jdGlvbiBzZXRQb2ludFRvUmVtb3ZlKHN0YXRlLCBQb2ludCkgewogICAgICBzdGF0ZS5Qb2ludFRvUmVtb3ZlID0gUG9pbnQ7CiAgICB9LAogICAgcmVtb3ZlUG9pbnQ6IGZ1bmN0aW9uIHJlbW92ZVBvaW50KHN0YXRlLCBhcmcpIHsKICAgICAgaWYgKGFyZyA9PT0gdHJ1ZSkgewogICAgICAgIHN0YXRlLlBvaW50cyA9IHN0YXRlLlBvaW50cy5maWx0ZXIoZnVuY3Rpb24gKGYpIHsKICAgICAgICAgIHJldHVybiBmLmlkICE9PSBzdGF0ZS5Qb2ludFRvUmVtb3ZlLmlkOwogICAgICAgIH0pOwogICAgICB9CgogICAgICBzdGF0ZS5Qb2ludFRvUmVtb3ZlID0ge307CiAgICB9LAogICAgc2V0UG9pbnRzOiBmdW5jdGlvbiBzZXRQb2ludHMoc3RhdGUsIFBvaW50cykgewogICAgICBzdGF0ZS5Qb2ludHMgPSBQb2ludHM7CiAgICB9LAogICAgY3JlYXRlTmV3UG9pbnQ6IGZ1bmN0aW9uIGNyZWF0ZU5ld1BvaW50KHN0YXRlKSB7CiAgICAgIHZhciBuZXdQb2ludCA9IHsKICAgICAgICBpZDogRGF0ZS5ub3coKSwKICAgICAgICBBdXRob3JzOiBbXSwKICAgICAgICBDb21wYW55OiBbXSwKICAgICAgICBQYXJ0aWNpcGFudHM6IFtdLAogICAgICAgIEFkZGl0aW9uYWxJbmZvcm1hdGlvbjogJycsCiAgICAgICAgVHlwZTogMSwKICAgICAgICBsb2dvVHlwZTogc3RhdGUuTmV3UG9pbnRUeXBlLAogICAgICAgIHN0YXRlSWQ6IDEsCiAgICAgICAgRmlsZXM6IFtdCiAgICAgIH07CiAgICAgIHN0YXRlLlBvaW50cy51bnNoaWZ0KG5ld1BvaW50KTsKICAgICAgc3RhdGUuTmV3UG9pbnRUeXBlID0gJyc7CiAgICB9LAogICAgc2F2ZURhdGE6IGZ1bmN0aW9uIHNhdmVEYXRhKHN0YXRlLCBQb2ludCkgewogICAgICBzdGF0ZS5Qb2ludHMuZm9yRWFjaChmdW5jdGlvbiAoZWxlbSkgewogICAgICAgIGlmIChlbGVtLmlkID09PSBQb2ludC5pZCkgewogICAgICAgICAgZWxlbS5BdXRob3JzID0gUG9pbnQuQXV0aG9yczsKICAgICAgICAgIGVsZW0uQ29tcGFueSA9IFBvaW50LkNvbXBhbnk7CiAgICAgICAgICBlbGVtLlBhcnRpY2lwYW50cyA9IFBvaW50LlBhcnRpY2lwYW50czsKICAgICAgICAgIGVsZW0uQWRkaXRpb25hbEluZm9ybWF0aW9uID0gUG9pbnQuQWRkaXRpb25hbEluZm9ybWF0aW9uOwogICAgICAgICAgZWxlbS5UeXBlID0gUG9pbnQuVHlwZTsKICAgICAgICAgIGVsZW0ubG9nb1R5cGUgPSBQb2ludC5sb2dvVHlwZTsKICAgICAgICAgIGVsZW0uc3RhdGVJZCA9IFBvaW50LnN0YXRlSWQ7CiAgICAgICAgICBlbGVtLkZpbGVzID0gUG9pbnQuRmlsZXM7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0KICB9LAogIGFjdGlvbnM6IHsKICAgIG9ubG9hZENsaWVudFJlcG9zaXRvcmllczogZnVuY3Rpb24gb25sb2FkQ2xpZW50UmVwb3NpdG9yaWVzKF9yZWYpIHsKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgICB2YXIgY29tbWl0LCBzdG9yYWdlczsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBjb21taXQgPSBfcmVmLmNvbW1pdDsKICAgICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAxOwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDQ7CiAgICAgICAgICAgICAgICByZXR1cm4gYXhpb3MuZ2V0KCdjbGllbnQtc3RvcmFnZXMnKTsKCiAgICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgICAgc3RvcmFnZXMgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgICAgY29tbWl0KCdzZXRQb2ludHMnLCBzdG9yYWdlcy5kYXRhKTsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxMTsKICAgICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgICBjYXNlIDg6CiAgICAgICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gODsKICAgICAgICAgICAgICAgIF9jb250ZXh0LnQwID0gX2NvbnRleHRbImNhdGNoIl0oMSk7CiAgICAgICAgICAgICAgICBhbGVydCgn0J7RiNC40LHQutCwJyk7CgogICAgICAgICAgICAgIGNhc2UgMTE6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlLCBudWxsLCBbWzEsIDhdXSk7CiAgICAgIH0pKSgpOwogICAgfQogIH0sCiAgbmFtZXNwYWNlZDogdHJ1ZQp9Ow=="},{"version":3,"sources":["/var/www/html/front/src/store/modules/clientData/ClientStoragesModule.js"],"names":["axios","ClientStoragesModule","state","Points","NewPointType","PointToRemove","getters","mutations","setNewPointType","type","setPointToRemove","Point","removePoint","arg","filter","f","id","setPoints","createNewPoint","newPoint","Date","now","Authors","Company","Participants","AdditionalInformation","Type","logoType","stateId","Files","unshift","saveData","forEach","elem","actions","onloadClientRepositories","commit","get","storages","data","alert","namespaced"],"mappings":"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","sourcesContent":["import axios from \"axios\";\n\nexport const ClientStoragesModule = {\n    state: () => ({\n        Points: [],\n        NewPointType:'',\n        PointToRemove: {},\n    }),\n    getters: {\n\n    },\n    mutations: {\n        setNewPointType(state, type) {\n            state.NewPointType = type\n        },\n        setPointToRemove(state, Point) {\n            state.PointToRemove = Point\n        },\n        removePoint(state, arg) {\n            if (arg === true) {\n                state.Points = state.Points.filter(f => f.id !== state.PointToRemove.id)\n            }\n            state.PointToRemove = {}\n\n        },\n        setPoints(state, Points) {\n            state.Points = Points\n        },\n        createNewPoint(state) {\n            const newPoint = {\n                id: Date.now(),\n                Authors: [],\n                Company:[],\n                Participants:[],\n                AdditionalInformation: '',\n                Type: 1,\n                logoType: state.NewPointType,\n                stateId: 1,\n                Files: []\n            }\n            state.Points.unshift(newPoint)\n            state.NewPointType = ''\n        },\n        saveData(state, Point) {\n            state.Points.forEach(elem => {\n                if (elem.id === Point.id) {\n                    elem.Authors = Point.Authors\n                    elem.Company = Point.Company\n                    elem.Participants = Point.Participants\n                    elem.AdditionalInformation = Point.AdditionalInformation\n                    elem.Type = Point.Type\n                    elem.logoType = Point.logoType\n                    elem.stateId = Point.stateId\n                    elem.Files = Point.Files\n                }\n            })\n        }\n    },\n    actions: {\n        async onloadClientRepositories({commit}) {\n            try {\n                let storages = await axios.get('client-storages')\n                commit('setPoints', storages.data)\n            } catch (e) {\n                alert('Ошибка')\n            }\n        },\n    },\n    namespaced:true\n}\n"]}]}