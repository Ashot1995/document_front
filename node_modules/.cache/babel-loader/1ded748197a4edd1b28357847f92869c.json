{"remainingRequest":"/var/www/html/front/node_modules/babel-loader/lib/index.js!/var/www/html/front/node_modules/cache-loader/dist/cjs.js??ref--1-0!/var/www/html/front/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/html/front/src/components/popups/SpecifyMailPopup.vue?vue&type=script&lang=js&","dependencies":[{"path":"/var/www/html/front/src/components/popups/SpecifyMailPopup.vue","mtime":1637097269375},{"path":"/var/www/html/front/babel.config.js","mtime":1636015662000},{"path":"/var/www/html/front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/front/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/var/www/html/front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiL3Zhci93d3cvaHRtbC9mcm9udC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0U3ByZWFkMiI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCB7IG1hcEFjdGlvbnMgfSBmcm9tICd2dWV4JzsKaW1wb3J0IHsgZW1haWwsIHJlcXVpcmVkIH0gZnJvbSAndnVlbGlkYXRlL2xpYi92YWxpZGF0b3JzJzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJTcGVjaWZ5TWFpbFBvcHVwIiwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgZW1haWw6ICcnCiAgICB9OwogIH0sCiAgdmFsaWRhdGlvbnM6IHsKICAgIGVtYWlsOiB7CiAgICAgIGVtYWlsOiBlbWFpbCwKICAgICAgcmVxdWlyZWQ6IHJlcXVpcmVkCiAgICB9CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdmFyIF90aGlzID0gdGhpczsKCiAgICB0aGlzLiRuZXh0VGljayhmdW5jdGlvbiAoKSB7CiAgICAgIF90aGlzLiRyZWZzLmlucHV0LmZvY3VzKCk7CiAgICB9KTsKICB9LAogIG1ldGhvZHM6IF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwgbWFwQWN0aW9ucyh7CiAgICB0b2dnbGVUeXBlUG9wdXA6ICdQb3B1cE1vZHVsZS90b2dnbGVUeXBlUG9wdXAnCiAgfSkpLCB7fSwgewogICAgc3VibWl0RW1haWw6IGZ1bmN0aW9uIHN1Ym1pdEVtYWlsKCkgewogICAgICBpZiAodGhpcy4kdi4kaW52YWxpZCkgewogICAgICAgIHRoaXMuJHYuJHRvdWNoKCk7CiAgICAgICAgcmV0dXJuOwogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMudG9nZ2xlVHlwZVBvcHVwKCdhY2Nlc3MnKTsKICAgICAgfQogICAgfQogIH0pCn07"},{"version":3,"sources":["SpecifyMailPopup.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA,SAAA,UAAA,QAAA,MAAA;AACA,SAAA,KAAA,EAAA,QAAA,QAAA,0BAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,kBADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,KAAA,EAAA;AADA,KAAA;AAGA,GANA;AAOA,EAAA,WAAA,EAAA;AACA,IAAA,KAAA,EAAA;AAAA,MAAA,KAAA,EAAA,KAAA;AAAA,MAAA,QAAA,EAAA;AAAA;AADA,GAPA;AAUA,EAAA,OAVA,qBAUA;AAAA;;AACA,SAAA,SAAA,CAAA,YAAA;AACA,MAAA,KAAA,CAAA,KAAA,CAAA,KAAA,CAAA,KAAA;AACA,KAFA;AAGA,GAdA;AAeA,EAAA,OAAA,kCACA,UAAA,CAAA;AACA,IAAA,eAAA,EAAA;AADA,GAAA,CADA;AAIA,IAAA,WAJA,yBAIA;AACA,UAAA,KAAA,EAAA,CAAA,QAAA,EAAA;AACA,aAAA,EAAA,CAAA,MAAA;AACA;AACA,OAHA,MAGA;AACA,aAAA,eAAA,CAAA,QAAA;AACA;AACA;AAXA;AAfA,CAAA","sourcesContent":["<template>\n  <div class=\"popup__body\">\n    <div class=\"title\">Укажите вашу Google-почту</div>\n    <form  @submit.prevent=\"submitEmail\">\n      <div class=\"form-group\">\n        <input\n            type=\"text\"\n            ref=\"input\"\n            v-model.trim=\"email\"\n            :class=\"{invalid:($v.email.$dirty && !$v.email.required) || ($v.email.$dirty && !$v.email.email)}\"\n        >\n        <div\n            class=\"error\"\n            v-if=\"$v.email.$dirty && !$v.email.required\"\n        >\n          Поле email не должно быть пустым\n        </div>\n        <div\n            class=\"error\"\n            v-else-if=\"$v.email.$dirty && !$v.email.email\"\n        >\n          Введите корректный Email\n        </div>\n      </div>\n      <div class=\"control-buttons\">\n        <button class=\"btn-orange\" type=\"submit\">\n          Продолжить\n        </button>\n      </div>\n    </form>\n  </div>\n</template>\n\n<script>\nimport {mapActions} from 'vuex'\nimport {email, required} from 'vuelidate/lib/validators'\n\nexport default {\n  name: \"SpecifyMailPopup\",\n  data() {\n    return {\n      email: '',\n    }\n  },\n  validations: {\n    email:{email, required},\n  },\n  mounted() {\n    this.$nextTick(()=>{\n      this.$refs.input.focus()\n    });\n  },\n  methods: {\n    ...mapActions({\n      toggleTypePopup: 'PopupModule/toggleTypePopup'\n    }),\n    submitEmail() {\n      if(this.$v.$invalid) {\n        this.$v.$touch()\n        return\n      } else {\n        this.toggleTypePopup('access')\n      }\n    }\n  }\n}\n</script>\n\n<style scoped lang=\"scss\">\n  .invalid {\n    border: 1px solid red;\n  }\n  input {\n    width: 350px !important;\n  }\n  .error {\n    margin-top: 5px;\n    color: red;\n    padding: 0 15px;\n    font-size: 12px;\n  }\n</style>\n"],"sourceRoot":"src/components/popups"}]}