{"remainingRequest":"/var/www/html/front/node_modules/babel-loader/lib/index.js!/var/www/html/front/src/store/modules/clientData/FilesForAntiPiracy.js","dependencies":[{"path":"/var/www/html/front/src/store/modules/clientData/FilesForAntiPiracy.js","mtime":1637340537907},{"path":"/var/www/html/front/babel.config.js","mtime":1636015662000},{"path":"/var/www/html/front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/front/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2guanMiOwpleHBvcnQgdmFyIEZpbGVzRm9yQW50aVBpcmFjeSA9IHsKICBzdGF0ZTogZnVuY3Rpb24gc3RhdGUoKSB7CiAgICByZXR1cm4gewogICAgICBGaWxlc0ZvckFudGlQaXJhY3lSZXBvc2l0b3JpZXM6IFtdLAogICAgICBGaWxlc0ZvckFudGlQaXJhY3lNYWluUmVwb3NpdG9yeTogW10sCiAgICAgIEZpbGVzT25BbnRpUGlyYWN5OiBbXSwKICAgICAgRmlsZUFkZDoge30KICAgIH07CiAgfSwKICBnZXR0ZXJzOiB7fSwKICBtdXRhdGlvbnM6IHsKICAgIHNldEZpbGVzRm9yUmVwb3NpdG9yaWVzOiBmdW5jdGlvbiBzZXRGaWxlc0ZvclJlcG9zaXRvcmllcyhzdGF0ZSwgZGF0YSkgewogICAgICBzdGF0ZS5GaWxlc0ZvckFudGlQaXJhY3lSZXBvc2l0b3JpZXMgPSBkYXRhOwogICAgfSwKICAgIHNldEZpbGVzRm9yTWFpblJlcG9zaXRvcnk6IGZ1bmN0aW9uIHNldEZpbGVzRm9yTWFpblJlcG9zaXRvcnkoc3RhdGUsIGRhdGEpIHsKICAgICAgc3RhdGUuRmlsZXNGb3JBbnRpUGlyYWN5TWFpblJlcG9zaXRvcnkgPSBkYXRhOwogICAgfSwKICAgIGFkZEZpbGVPbkFudGlQaXJhY3k6IGZ1bmN0aW9uIGFkZEZpbGVPbkFudGlQaXJhY3koc3RhdGUsIGZpbGUpIHsKICAgICAgc3RhdGUuRmlsZUFkZCA9IGZpbGU7CiAgICB9LAogICAgdXBkYXRlRGF0YTogZnVuY3Rpb24gdXBkYXRlRGF0YShzdGF0ZSwgYXJnKSB7CiAgICAgIGlmIChhcmcpIHsKICAgICAgICBzdGF0ZS5GaWxlc09uQW50aVBpcmFjeS5wdXNoKHN0YXRlLkZpbGVBZGQpOwogICAgICB9IGVsc2UgewogICAgICAgIHN0YXRlLkZpbGVzT25BbnRpUGlyYWN5ID0gc3RhdGUuRmlsZXNPbkFudGlQaXJhY3kuZmlsdGVyKGZ1bmN0aW9uIChmKSB7CiAgICAgICAgICByZXR1cm4gZi5pZCAhPT0gc3RhdGUuRmlsZUFkZC5pZDsKICAgICAgICB9KTsKICAgICAgfQoKICAgICAgc3RhdGUuRmlsZXNGb3JBbnRpUGlyYWN5UmVwb3NpdG9yaWVzLmZvckVhY2goZnVuY3Rpb24gKGVsZW0pIHsKICAgICAgICBpZiAoZWxlbS5pZCA9PT0gc3RhdGUuRmlsZUFkZC5pZCkgewogICAgICAgICAgZWxlbVsnb25BbnRpcGlyYWN5J10gPSBhcmc7CiAgICAgICAgfQogICAgICB9KTsKICAgICAgc3RhdGUuRmlsZXNGb3JBbnRpUGlyYWN5TWFpblJlcG9zaXRvcnkuZm9yRWFjaChmdW5jdGlvbiAoZWxlbSkgewogICAgICAgIGlmIChlbGVtLmlkID09PSBzdGF0ZS5GaWxlQWRkLmlkKSB7CiAgICAgICAgICBlbGVtWydvbkFudGlwaXJhY3knXSA9IGFyZzsKICAgICAgICB9CiAgICAgIH0pOwogICAgfSwKICAgIHJldHVybkZpbGVBZGQ6IGZ1bmN0aW9uIHJldHVybkZpbGVBZGQoc3RhdGUpIHsKICAgICAgc3RhdGUuRmlsZUFkZCA9IHt9OwogICAgfQogIH0sCiAgYWN0aW9uczogewogICAgRmlsZXNGb3JBbnRpUGlyYWN5Q29sbGVjdG9yOiBmdW5jdGlvbiBGaWxlc0ZvckFudGlQaXJhY3lDb2xsZWN0b3IoX3JlZikgewogICAgICB2YXIgY29tbWl0ID0gX3JlZi5jb21taXQsCiAgICAgICAgICByb290R2V0dGVycyA9IF9yZWYucm9vdEdldHRlcnM7CiAgICAgIHZhciBGaWxlc01haW5SZXBvc2l0b3J5ID0gcm9vdEdldHRlcnNbIk1haW5SZXBvc2l0b3J5TW9kdWxlL2dldEZpbGVzRm9yQW50aVBpcmFjeSJdOwogICAgICBjb21taXQoJ3NldEZpbGVzRm9yTWFpblJlcG9zaXRvcnknLCBGaWxlc01haW5SZXBvc2l0b3J5KTsKICAgICAgdmFyIEZpbGVzUmVwb3NpdG9yaWVzID0gcm9vdEdldHRlcnNbIkNsaWVudFN0b3JhZ2VGaWxlc01vZHVsZS9nZXRGaWxlc0ZvckFudGlQaXJhY3kiXTsKICAgICAgY29tbWl0KCdzZXRGaWxlc0ZvclJlcG9zaXRvcmllcycsIEZpbGVzUmVwb3NpdG9yaWVzKTsKICAgIH0sCiAgICBsaXN0ZW5BbnN3ZXJGb3JBZGRGaWxlOiBmdW5jdGlvbiBsaXN0ZW5BbnN3ZXJGb3JBZGRGaWxlKF9yZWYyLCBhbnN3ZXIpIHsKICAgICAgdmFyIGNvbW1pdCA9IF9yZWYyLmNvbW1pdDsKICAgICAgY29tbWl0KCd1cGRhdGVEYXRhJywgYW5zd2VyKTsKICAgICAgY29tbWl0KCdyZXR1cm5GaWxlQWRkJyk7CiAgICB9CiAgfSwKICBuYW1lc3BhY2VkOiB0cnVlCn07"},{"version":3,"sources":["/var/www/html/front/src/store/modules/clientData/FilesForAntiPiracy.js"],"names":["FilesForAntiPiracy","state","FilesForAntiPiracyRepositories","FilesForAntiPiracyMainRepository","FilesOnAntiPiracy","FileAdd","getters","mutations","setFilesForRepositories","data","setFilesForMainRepository","addFileOnAntiPiracy","file","updateData","arg","push","filter","f","id","forEach","elem","returnFileAdd","actions","FilesForAntiPiracyCollector","commit","rootGetters","FilesMainRepository","FilesRepositories","listenAnswerForAddFile","answer","namespaced"],"mappings":";;;AAAA,OAAO,IAAMA,kBAAkB,GAAG;AAC9BC,EAAAA,KAAK,EAAE;AAAA,WAAO;AACVC,MAAAA,8BAA8B,EAAC,EADrB;AAEVC,MAAAA,gCAAgC,EAAC,EAFvB;AAGVC,MAAAA,iBAAiB,EAAC,EAHR;AAIVC,MAAAA,OAAO,EAAC;AAJE,KAAP;AAAA,GADuB;AAO9BC,EAAAA,OAAO,EAAE,EAPqB;AAU9BC,EAAAA,SAAS,EAAE;AACPC,IAAAA,uBADO,mCACiBP,KADjB,EACwBQ,IADxB,EAC8B;AACjCR,MAAAA,KAAK,CAACC,8BAAN,GAAuCO,IAAvC;AACH,KAHM;AAIPC,IAAAA,yBAJO,qCAImBT,KAJnB,EAI0BQ,IAJ1B,EAIgC;AACnCR,MAAAA,KAAK,CAACE,gCAAN,GAAyCM,IAAzC;AACH,KANM;AAOPE,IAAAA,mBAPO,+BAOaV,KAPb,EAOoBW,IAPpB,EAO0B;AAC7BX,MAAAA,KAAK,CAACI,OAAN,GAAgBO,IAAhB;AACH,KATM;AAUPC,IAAAA,UAVO,sBAUIZ,KAVJ,EAUWa,GAVX,EAUgB;AACnB,UAAIA,GAAJ,EAAS;AACLb,QAAAA,KAAK,CAACG,iBAAN,CAAwBW,IAAxB,CAA6Bd,KAAK,CAACI,OAAnC;AACH,OAFD,MAEO;AACHJ,QAAAA,KAAK,CAACG,iBAAN,GAA0BH,KAAK,CAACG,iBAAN,CAAwBY,MAAxB,CAA+B,UAAAC,CAAC;AAAA,iBAAIA,CAAC,CAACC,EAAF,KAASjB,KAAK,CAACI,OAAN,CAAca,EAA3B;AAAA,SAAhC,CAA1B;AACH;;AACDjB,MAAAA,KAAK,CAACC,8BAAN,CAAqCiB,OAArC,CAA6C,UAAAC,IAAI,EAAI;AACjD,YAAIA,IAAI,CAACF,EAAL,KAAYjB,KAAK,CAACI,OAAN,CAAca,EAA9B,EAAkC;AAC9BE,UAAAA,IAAI,CAAC,cAAD,CAAJ,GAAuBN,GAAvB;AACH;AACJ,OAJD;AAKAb,MAAAA,KAAK,CAACE,gCAAN,CAAuCgB,OAAvC,CAA+C,UAAAC,IAAI,EAAI;AACnD,YAAIA,IAAI,CAACF,EAAL,KAAYjB,KAAK,CAACI,OAAN,CAAca,EAA9B,EAAkC;AAC9BE,UAAAA,IAAI,CAAC,cAAD,CAAJ,GAAuBN,GAAvB;AACH;AACJ,OAJD;AAKH,KA1BM;AA2BPO,IAAAA,aA3BO,yBA2BOpB,KA3BP,EA2Bc;AACjBA,MAAAA,KAAK,CAACI,OAAN,GAAgB,EAAhB;AACH;AA7BM,GAVmB;AAyC9BiB,EAAAA,OAAO,EAAE;AACLC,IAAAA,2BADK,6CAC8C;AAAA,UAAtBC,MAAsB,QAAtBA,MAAsB;AAAA,UAAdC,WAAc,QAAdA,WAAc;AAC/C,UAAIC,mBAAmB,GAAGD,WAAW,CAAC,4CAAD,CAArC;AACAD,MAAAA,MAAM,CAAC,2BAAD,EAA8BE,mBAA9B,CAAN;AACA,UAAIC,iBAAiB,GAAGF,WAAW,CAAC,gDAAD,CAAnC;AACAD,MAAAA,MAAM,CAAC,yBAAD,EAA4BG,iBAA5B,CAAN;AACH,KANI;AAOLC,IAAAA,sBAPK,yCAO4BC,MAP5B,EAOoC;AAAA,UAAjBL,MAAiB,SAAjBA,MAAiB;AACrCA,MAAAA,MAAM,CAAC,YAAD,EAAeK,MAAf,CAAN;AACAL,MAAAA,MAAM,CAAC,eAAD,CAAN;AACH;AAVI,GAzCqB;AAqD9BM,EAAAA,UAAU,EAAC;AArDmB,CAA3B","sourcesContent":["export const FilesForAntiPiracy = {\r\n    state: () => ({\r\n        FilesForAntiPiracyRepositories:[],\r\n        FilesForAntiPiracyMainRepository:[],\r\n        FilesOnAntiPiracy:[],\r\n        FileAdd:{}\r\n    }),\r\n    getters: {\r\n\r\n    },\r\n    mutations: {\r\n        setFilesForRepositories(state, data) {\r\n            state.FilesForAntiPiracyRepositories = data\r\n        },\r\n        setFilesForMainRepository(state, data) {\r\n            state.FilesForAntiPiracyMainRepository = data\r\n        },\r\n        addFileOnAntiPiracy(state, file) {\r\n            state.FileAdd = file\r\n        },\r\n        updateData(state, arg) {\r\n            if (arg) {\r\n                state.FilesOnAntiPiracy.push(state.FileAdd)\r\n            } else {\r\n                state.FilesOnAntiPiracy = state.FilesOnAntiPiracy.filter(f => f.id !== state.FileAdd.id)\r\n            }\r\n            state.FilesForAntiPiracyRepositories.forEach(elem => {\r\n                if (elem.id === state.FileAdd.id) {\r\n                    elem['onAntipiracy'] = arg\r\n                }\r\n            })\r\n            state.FilesForAntiPiracyMainRepository.forEach(elem => {\r\n                if (elem.id === state.FileAdd.id) {\r\n                    elem['onAntipiracy'] = arg\r\n                }\r\n            })\r\n        },\r\n        returnFileAdd(state) {\r\n            state.FileAdd = {}\r\n        }\r\n    },\r\n    actions: {\r\n        FilesForAntiPiracyCollector({commit, rootGetters}) {\r\n            let FilesMainRepository = rootGetters[\"MainRepositoryModule/getFilesForAntiPiracy\"]\r\n            commit('setFilesForMainRepository', FilesMainRepository)\r\n            let FilesRepositories = rootGetters[\"ClientStorageFilesModule/getFilesForAntiPiracy\"]\r\n            commit('setFilesForRepositories', FilesRepositories)\r\n        },\r\n        listenAnswerForAddFile({commit}, answer) {\r\n            commit('updateData', answer)\r\n            commit('returnFileAdd')\r\n        },\r\n    },\r\n    namespaced:true\r\n}\r\n"]}]}